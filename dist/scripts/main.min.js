"use strict";const taskContainer=document.querySelector(".task-container"),statusMessage=document.querySelector(".status-message"),deleteMessage=document.querySelector(".delete-message"),deleteAllMessage=document.querySelector(".delete-all-message"),savedMessage=document.querySelector(".saved-message"),checkAllBtn=document.querySelector(".check-all-btn");checkAllBtn.addEventListener("click",checkAll);const uncheckAllBtn=document.querySelector(".uncheck-all-btn");uncheckAllBtn.addEventListener("click",uncheckAll);const deleteAllBtn=document.querySelector(".delete-all-btn");deleteAllBtn.addEventListener("click",openDeleteAllModal);const selectMore=document.querySelector(".more-options");selectMore.selectedIndex=0,selectMore.addEventListener("click",chooseMoreOptions);const tagsList=document.querySelector(".tags-list"),tagInput=tagsList.querySelector(".tag-input");tagInput.addEventListener("keyup",addTag);let maxTags=5,tags=[];document.addEventListener("click",clickOutsideModal),document.addEventListener("keyup",escapeCloseModal);const addTaskModal=document.querySelector(".add-task-modal"),addTaskInput=document.querySelector(".add-task-input"),addTaskBtn=document.querySelector(".add-task-btn");addTaskBtn.addEventListener("click",openCreateModal);const confirmAddBtn=document.querySelector(".confirm-add-btn");confirmAddBtn.addEventListener("click",addTask);const closeCreateBtn=addTaskModal.querySelector(".close-modal");closeCreateBtn.addEventListener("click",closeCreateModal);const editTaskModal=document.querySelector(".edit-task-modal"),editTaskInput=editTaskModal.querySelector(".edit-task-input"),editTagsList=document.querySelector(".edit-tags-list"),editTagInput=editTagsList.querySelector(".edit-tag-input");editTagInput.addEventListener("keyup",addTag);const confirmEditBtn=document.querySelector(".confirm-edit-btn");confirmEditBtn.addEventListener("click",editTask);const closeEditBtn=editTaskModal.querySelector(".close-modal");closeEditBtn.addEventListener("click",closeEditModal);const deleteAllModal=document.querySelector(".delete-all-modal"),confirmDeleteBtn=deleteAllModal.querySelector(".confirm-delete-btn");confirmDeleteBtn.addEventListener("click",deleteAll);const refuseDeleteBtn=deleteAllModal.querySelector(".refuse-delete-btn");refuseDeleteBtn.addEventListener("click",closeDeleteAllModal);const closeDeleteAllBtn=deleteAllModal.querySelector(".close-modal");let tasks,taskIndex;function Task(e,t){this.name=e,this.done=!1,this.tags=t}function init(){localStorage.tasks?(tasks=JSON.parse(localStorage.getItem("tasks")),addToDOM(),insertTags(),updateStatus()):tasks=[]}function addTask(){if(""===addTaskInput.value)addTaskInput.classList.add("empty-field"),addTaskInput.addEventListener("input",()=>{""!==addTaskInput.value&&addTaskInput.classList.remove("empty-field")});else{let e=[];tagsList.querySelectorAll("li").forEach(t=>{e.push(t.textContent)});const t=new Task(addTaskInput.value,e);tasks.push(t),addToLocalStorage(),addToDOM(),insertTags(),updateStatus(),closeCreateModal()}}function insertTags(){if(!localStorage.tasks)return;taskContainer.querySelectorAll(".task").forEach((e,t)=>{const a=document.createElement("ul");a.classList.add("tags"),tasks[t].tags.forEach((e,t)=>{const s=document.createElement("li");s.textContent=e,a.appendChild(s)}),e.insertBefore(a,e.children[2])})}function addToDOM(){taskContainer.innerHTML="",tasks.forEach((e,t)=>{taskContainer.innerHTML+=createTaskTemplate(e,t)})}function createTaskTemplate(e,t){return taskIndex=t,`\n  <div class="task flex">\n    <input type="checkbox" class="check-task" onclick="checkTask(${t})" \n    ${e.done?"checked":""}>\n\n    <p class="task-text ${e.done?"task-checked":""}">${e.name}</p>\n\n    <div class="task-actions dropdown" data-dropdown>\n      <button type="button" class="btn dropdown-btn" data-dropdown-btn title="More options">\n        <i class="fa-solid fa-ellipsis"></i>\n      </button>\n\n      <div class="dropdown-options">\n        <ul>\n          <li>\n            <button type="button" class="btn option-btn edit-btn" onclick="openEditModal(${t})">Edit</button>\n          </li>\n          <li>\n            <button type="button" class="btn option-btn delete-btn" onclick="deleteTask(${t})">Delete</button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>`}function addToLocalStorage(){localStorage.setItem("tasks",JSON.stringify(tasks))}function checkTask(e){tasks[e].done=!tasks[e].done;const t=document.querySelectorAll(".task")[e];tasks[e].done?t.querySelector(".task-text").classList.add("task-checked"):t.querySelector(".task-text").classList.remove("task-checked"),addToLocalStorage(),addToDOM(),updateStatus()}function checkAll(){tasks.forEach(e=>{e.done=!0}),document.querySelectorAll(".task").forEach(e=>{e.querySelector(".task-text").classList.add("task-checked")}),addToLocalStorage(),addToDOM(),insertTags(),updateStatus()}function uncheckAll(){tasks.forEach(e=>{e.done=!1}),document.querySelectorAll(".task").forEach(e=>{e.querySelector(".task-text").classList.remove("task-checked")}),addToLocalStorage(),addToDOM(),insertTags(),updateStatus()}function editTask(){if(""===editTaskInput.value)editTaskInput.classList.add("empty-field"),editTaskInput.addEventListener("input",()=>{""!==editTaskInput.value&&editTaskInput.classList.remove("empty-field")});else{tasks[taskIndex].name=editTaskInput.value;const e=editTagsList.querySelectorAll("li"),t=[];e.forEach(e=>{t.push(e.textContent)}),tasks[taskIndex].tags=t,addToLocalStorage(),addToDOM(),insertTags(),closeEditModal(),showSavedMessage(),setTimeout(hideSavedMessage,2e3)}}function showSavedMessage(){savedMessage.style.display="block"}function hideSavedMessage(){savedMessage.style.display="none"}function deleteTask(e){tasks.splice(e,1),0===tasks.length?(localStorage.removeItem("tasks"),addToDOM(),updateStatus(),showDeleteMessage(),setTimeout(hideDeleteMessage,2e3)):(addToLocalStorage(),addToDOM(),updateStatus(),showDeleteMessage(),setTimeout(hideDeleteMessage,2e3))}function deleteAll(){tasks.length=0,localStorage.removeItem("tasks"),addToLocalStorage(),addToDOM(),updateStatus(),deleteAllModal.style.display="none",showDeleteAllMessage(),setTimeout(hideDeleteAllMessage,2e3)}function showDeleteMessage(){deleteMessage.style.display="block"}function hideDeleteMessage(){deleteMessage.style.display="none"}function showDeleteAllMessage(){deleteAllMessage.style.display="block"}function hideDeleteAllMessage(){deleteAllMessage.style.display="none"}function updateStatus(){const e=tasks.filter(e=>e.done),t=tasks.length-e.length;statusMessage.textContent=0===t?"You don't have any tasks yet.":1===t?`You currently have ${t} task to do.`:`You currently have ${t} tasks to do.`}function chooseMoreOptions(e){taskContainer.querySelectorAll(".task").forEach(t=>{switch(e.target.value){case"show-all":t.style.display="flex";break;case"show-completed":t.querySelector(".task-text").classList.contains("task-checked")?t.style.display="flex":t.style.display="none";break;case"show-not-completed":t.querySelector(".task-text").classList.contains("task-checked")?t.style.display="none":t.style.display="flex"}})}function openCreateModal(){addTaskModal.setAttribute("data-create-modal",!0),addTaskModal.style.display="block",addTaskInput.classList.remove("empty-field"),addTaskInput.focus(),addTaskInput.placeholder=generatePlaceholder(),tagInput.value=""}function closeCreateModal(){addTaskModal.setAttribute("data-create-modal",!1),addTaskModal.style.display="none",addTaskInput.value="",addTaskInput.classList.contains("empty-field")&&addTaskInput.classList.remove("empty-field")}function openEditModal(e){taskIndex=e,editTaskModal.setAttribute("data-edit-modal",!0),editTaskModal.style.display="block",editTaskInput.value=tasks[e].name,editTagInput.value="",editTagsList.querySelectorAll("li").forEach(e=>e.remove());const t=[...tasks[e].tags];t.reverse(),t.forEach((e,t)=>{const a=document.createElement("li");a.textContent=e;const s=document.createElement("i");s.classList.add("fa-solid","fa-xmark"),a.appendChild(s),s.addEventListener("click",removeEditTag),editTagsList.prepend(a)}),editTaskInput.classList.remove("empty-field"),editTaskInput.focus(),document.querySelectorAll("[data-dropdown]")[e].classList.toggle("active-dropdown")}function removeEditTag(e){e.target.parentElement.remove()}function closeEditModal(){editTaskModal.setAttribute("data-edit-modal",!1),editTaskModal.style.display="none",editTaskInput.classList.contains("empty-field")&&editTaskInput.classList.remove("empty-field")}function openDeleteAllModal(){deleteAllModal.style.display="block"}function closeDeleteAllModal(){deleteAllModal.style.display="none"}function clickOutsideModal(e){e.target!==addTaskModal&&e.target!==editTaskModal&&e.target!==deleteAllModal||closeAllModals()}function escapeCloseModal(e){27===e.keyCode&&closeAllModals()}function closeAllModals(){addTaskModal.style.display="none",addTaskInput.value="",editTaskModal.style.display="none",editTaskInput.value="",deleteAllModal.style.display="none",addTaskInput.classList.contains("empty-field")&&addTaskInput.classList.remove("empty-field"),editTaskInput.classList.contains("empty-field")&&editTaskInput.classList.remove("empty-field")}function generatePlaceholder(){const e=["Walk the dog","Go for a walk","Go for a run","Visit friends","Clean the room","Learn to play the piano","Sign up for a dance class","Watch a favorite movie","Do school homework","Learn English","Learn Polish","Learn to make websites","Make dinner","Do some gardening","Compose a song","Write a poem","Try something new","Go to the river"];return e[Math.floor(Math.random()*e.length)]}function createTag(e,t){e.target===editTagInput?(editTagsList.querySelectorAll("li").forEach(e=>e.remove()),t.slice().reverse().forEach(e=>{let t=`<li>${e} <i class="fa-solid fa-xmark" onclick="removeTag(this, '${e}')"></i></li>`;editTagsList.insertAdjacentHTML("afterbegin",t)})):(tagsList.querySelectorAll("li").forEach(e=>e.remove()),tags.slice().reverse().forEach(e=>{let t=`<li>${e} <i class="fa-solid fa-xmark" onclick="removeTag(this, '${e}')"></i></li>`;tagsList.insertAdjacentHTML("afterbegin",t)}))}function removeTag(e,t){let a=tags.indexOf(t);tags=[...tags.slice(0,a),...tags.slice(a+1)],e.parentElement.remove()}function addTag(e){if("Enter"===e.key)if(e.target===editTagInput){const t=e.target.parentElement.querySelectorAll("li");let a=[];t.forEach((e,t)=>{a.push(e.textContent)});let s=e.target.value.replace(/\s+/g," ");s.length>1&&!a.includes(s)&&a.length<5&&s.split(",").forEach(t=>{a.push(t),createTag(e,a)}),e.target.value=""}else{let t=e.target.value.replace(/\s+/g," ");t.length>1&&!tags.includes(t)&&tags.length<5&&t.split(",").forEach(t=>{tags.push(t),createTag(e)}),e.target.value=""}}closeDeleteAllBtn.addEventListener("click",closeDeleteAllModal),init();